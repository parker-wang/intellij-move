<idea-plugin>
    <id>org.move.lang</id>
    <name>Move Language</name>

    <vendor>Pontem Network</vendor>

    <description>
        <![CDATA[
            <p>Support for Move, smart-contract language for Aptos and other blockchains.</p>

            <p><a href="https://github.com/pontem-network/intellij-move">https://github.com/pontem-network/intellij-move</a></p>
        ]]>
    </description>
    <change-notes>
        <![CDATA[
    <h3>1.12.0</h3>
    <ul>
    <li>Unused variable inspection</li>
    <li>Warn if non-phantom type parameter only used in phantom positions</li>
    <li>Warn if phantom type parameter used in non-phantom positions</li>
    <li>Unresolved reference inspection: dot expr support</li>
    <li>Unresolved reference inspection: imports</li>
    <li>Correct scoping for #[test_only] items</li>
    <li>Refactor internal project model</li>
    </ul>
    <h3>1.11.0</h3>
    <ul>
    <li>Support new build/ directory layout in Aptos 0.1.2, drop support for earlier layouts</li>
    <li>Parser: support <b>entry</b> keyword</li>
    <li>Parser: support arbitrary order of function modifiers</li>
    </ul>
    <h3>1.10.1</h3>
    <ul>
    <li>Import optimizer and auto-import bug fixes</li>
    <li>Better priorities for the completions</li>
    <li>Renaming module now renames module file too</li>
    </ul>
    <h3>1.10.0</h3>
    <ul>
    <li>Auto-import: automatically create use statements for the items not yet present in scope</li>
    <li>Sort imports in Optimize Imports action</li>
    </ul>
    <h3>1.9.0</h3>
    <ul>
    <li>Enable Unresolved Reference inspection by default</li>
    <li>Add address to new files automatically</li>
    </ul>
    <h3>1.8.0</h3>
    <ul>
    <li>Replace Dove support with Aptos CLI support</li>
    <li>Add Move Project Wizard with "aptos move init" support</li>
    <li>Add gutter icons for the test runner</li>
    <li>Add Build Project toolbar button support</li>
    </ul>
    <h3>1.7.0</h3>
    <ul>
    <li>Optimize imports support: unused import inspection, optimize imports action</li>
    <li>Auto-import quickfix for unresolved reference</li>
    <li>Make build/ directory read-only</li>
    </ul>
    <h3>1.6.2</h3>
    <ul>
    <li>2022.1 version</li>
    <li>Improve keys completion for Move.toml</li>
    </ul>
    <h3>1.6.1</h3>
    <ul>
    <li>Parser fix for include schema</li>
    <li>Minor fixes for types in MSL</li>
    <li>Disable Unresolved Reference inspection by default, again</li>
    </ul>
    <h3>1.6.0</h3>
    <ul>
    <li>Specifications support improvements</li>
    <li>Improve performance of dependencies name resolution</li>
    </ul>
    <h3>1.5.0</h3>
    <ul>
    <li>Add type hints for let statement bindings</li>
    <li>Fix some bugs around named addresses scoping</li>
    <li>Improve analysis performance significantly</li>
    </ul>
    <h3>1.4.0</h3>
    <ul>
    <li>Add name resolution and completion support to MSL(spec blocks).
    <li>Add environment variables to Move Run Configuration. This allows running Move Prover from IDE.</li>
    <li>Add better support for git dependencies.</li>
    <li>Lots of minor fixes and improvements.</li>
    </ul>
]]>
    </change-notes>
    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <depends>com.intellij.modules.platform</depends>
    <depends>org.toml.lang</depends>

    <extensions defaultExtensionNs="com.intellij">
        <fileType name="Move"
                  language="Move"
                  extensions="move"
                  implementationClass="org.move.lang.MoveFileType"
                  fieldName="INSTANCE"/>
        <fileBasedIndex implementation="org.move.ide.inspections.imports.MvNamedElementIndex"/>

        <configurationType
                implementation="org.move.cli.runconfig.AptosCommandConfigurationType"/>
        <runConfigurationProducer
                implementation="org.move.cli.runconfig.producers.TestCommandConfigurationProducer"/>
        <runConfigurationProducer
                implementation="org.move.cli.runconfig.producers.PublishCommandConfigurationProducer"/>
        <runLineMarkerContributor language="Move"
                                  implementationClass="org.move.ide.lineMarkers.AptosCommandLineMarkerContributor"/>

        <lang.parserDefinition language="Move"
                               implementationClass="org.move.lang.MoveParserDefinition"/>
        <lang.documentationProvider language="Move"
                                    implementationClass="org.move.ide.docs.MvDocumentationProvider"/>

        <lang.importOptimizer language="Move" implementationClass="org.move.ide.refactoring.MvImportOptimizer"/>

        <gotoSymbolContributor implementation="org.move.ide.navigation.MvSymbolNavigationContributor"/>
        <gotoClassContributor implementation="org.move.ide.navigation.MvStructNavigationContributor"/>

        <lang.syntaxHighlighter language="Move"
                                implementationClass="org.move.ide.MvHighlighter"/>
        <lang.commenter language="Move"
                        implementationClass="org.move.ide.MvCommenter"/>
        <lang.braceMatcher language="Move"
                           implementationClass="org.move.ide.typing.MvBraceMatcher"/>
        <lang.quoteHandler language="Move"
                           implementationClass="org.move.ide.typing.MvQuoteHandler"/>
        <typedHandler implementation="org.move.ide.typing.MvAngleBraceTypedHandler"
                      id="MvAngleBracketsHandler"/>
        <enterHandlerDelegate implementation="org.move.ide.typing.MvEnterInLineCommentHandler"
                              id="MvEnterInLineComments"/>
        <backspaceHandlerDelegate implementation="org.move.ide.typing.MvAngleBracketsBackspaceHandler"
                                  id="MvAngleBracketsBackspaceHandler"/>

        <lang.formatter language="Move"
                        implementationClass="org.move.ide.formatter.MvFormattingModelBuilder"/>
        <langCodeStyleSettingsProvider
                implementation="org.move.ide.formatter.MvLanguageCodeStyleSettingsProvider"/>

        <lang.foldingBuilder language="Move" implementationClass="org.move.ide.folding.MvFoldingBuilder"/>

        <lang.namesValidator language="Move"
                             implementationClass="org.move.ide.refactoring.MvNamesValidator"/>
        <lang.refactoringSupport language="Move"
                                 implementationClass="org.move.ide.refactoring.MvRefactoringSupportProvider"/>

<!--        <lang.refactoringSupport language="TOML"-->
<!--                                 implementationClass="org.move.ide.refactoring.toml.TomlRefactoringSupportProvider"/>-->
<!--        <renameHandler implementation="org.move.ide.refactoring.toml.TomlInPlaceRenameHandler" />-->
<!--        <renameHandler implementation="org.move.ide.refactoring.toml.TomlRenameHandler" />-->
<!--        <renamePsiElementProcessor implementation="org.move.ide.refactoring.toml.MvRenameAddressProcessor"-->
<!--                                   order="first"-->
<!--                                   id="mvRenameAddressProcessor" />-->


        <lang.findUsagesProvider language="Move"
                                 implementationClass="org.move.ide.search.MvFindUsagesProvider"/>
        <usageTypeProvider
                implementation="org.move.ide.search.NamedAddressUsageTypeProvider"/>
        <findUsagesHandlerFactory
                implementation="org.move.ide.search.NamedAddressFindUsagesHandlerFactory"/>

        <completion.confidence language="Move"
                               implementationClass="org.move.lang.core.completion.MvCompletionConfidence"/>
        <completion.contributor language="Move"
                                implementationClass="org.move.lang.core.completion.CommonCompletionContributor"/>
        <completion.contributor language="Move"
                                implementationClass="org.move.lang.core.completion.KeywordCompletionContributor"/>
        <completion.contributor language="TOML"
                                implementationClass="org.move.toml.completion.MoveTomlCompletionContributor"/>

        <psi.referenceContributor language="TOML"
                                  implementation="org.move.toml.MoveTomlReferenceContributor"/>
        <psi.referenceContributor language="Move"
                                  implementation="org.move.toml.NamedAddressReferenceContributor"/>

        <annotator language="Move"
                   implementationClass="org.move.ide.annotator.ErrorAnnotator"/>
        <annotator language="Move"
                   implementationClass="org.move.ide.annotator.HighlightingAnnotator"/>

        <codeInsight.parameterInfo language="Move"
                                   implementationClass="org.move.ide.hints.FunctionParameterInfoHandler"/>
        <codeInsight.parameterInfo language="Move"
                                   implementationClass="org.move.ide.hints.TypeParameterInfoHandler"/>
        <codeInsight.parameterInfo language="Move"
                                   implementationClass="org.move.ide.hints.StructLitFieldsInfoHandler"/>
        <codeInsight.parameterNameHints language="Move"
                                        implementationClass="org.move.ide.hints.MvInlayParameterHintsProvider"/>
        <codeInsight.inlayProvider language="Move"
                                   implementationClass="org.move.ide.hints.type.MvInlayTypeHintsProvider"/>

        <defaultLiveTemplates file="liveTemplates/Move.xml"/>
        <liveTemplateContext implementation="org.move.ide.live_templates.MvContextType$Generic"/>
        <liveTemplateContext implementation="org.move.ide.live_templates.MvContextType$Module"/>
        <liveTemplateContext implementation="org.move.ide.live_templates.MvContextType$Block"/>

        <renamePsiElementProcessor implementation="org.move.ide.refactoring.MvRenameProcessor"
                                   order="first"
                                   id="mvRenameProcessor"/>
        <renamePsiElementProcessor implementation="org.move.ide.refactoring.MvRenameFileProcessor"
                                   order="before renamePsiFile"
                                   id="mvRenamePsiFileProcessor"/>
        <lang.psiStructureViewFactory
                language="Move"
                implementationClass="org.move.ide.navigation.MvStructureViewBuilderFactory"/>

        <declarationRangeHandler
                key="org.move.lang.core.psi.MvModule"
                implementationClass="org.move.ide.navigation.ModuleDeclarationRangeHandler"/>
        <declarationRangeHandler
                key="org.move.lang.core.psi.MvFunction"
                implementationClass="org.move.ide.navigation.FunctionDeclarationRangeHandler"/>

        <!--        <localInspection language="Move" groupPath="Move" groupName="Naming"-->
        <!--                         displayName="Attempt to override a built-in function"-->
        <!--                         enabledByDefault="true" level="ERROR"-->
        <!--                         implementationClass="org.move.ide.inspections.lints.FunctionNamingInspection"/>-->
        <localInspection language="Move" groupName="Move"
                         displayName="Unresolved reference"
                         enabledByDefault="true"
                         level="ERROR"
                         implementationClass="org.move.ide.inspections.MvUnresolvedReferenceInspection"/>
        <localInspection language="Move" groupName="Move"
                         displayName="Field initialization shorthand"
                         enabledByDefault="true" level="WEAK WARNING"
                         implementationClass="org.move.ide.inspections.FieldInitShorthandInspection"/>
        <localInspection language="Move" groupName="Move"
                         displayName="Invalid module declaration"
                         enabledByDefault="true" level="ERROR"
                         implementationClass="org.move.ide.inspections.InvalidModuleDeclarationInspection"/>
        <localInspection language="Move" groupName="Move"
                         displayName="Constant naming convention"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="org.move.ide.inspections.MvConstNamingInspection"/>
        <localInspection language="Move" groupName="Move"
                         displayName="Struct naming convention"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="org.move.ide.inspections.MvStructNamingInspection"/>
        <localInspection language="Move" groupName="Move"
                         displayName="Local variable naming convention"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="org.move.ide.inspections.MvLocalBindingNamingInspection"/>
        <localInspection language="Move" groupName="Move"
                         displayName="Redundant qualifier"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="org.move.ide.inspections.RedundantQualifiedPathInspection"/>
        <localInspection language="Move" groupName="Move"
                         displayName="Type checking"
                         enabledByDefault="true" level="ERROR"
                         implementationClass="org.move.ide.inspections.MvTypeCheckInspection"/>
        <localInspection language="Move" groupName="Move"
                         displayName="Missing acquires"
                         enabledByDefault="true" level="ERROR"
                         implementationClass="org.move.ide.inspections.MvMissingAcquiresInspection"/>
        <localInspection language="Move" groupName="Move"
                         displayName="Unused struct type parameter"
                         enabledByDefault="true" level="ERROR"
                         implementationClass="org.move.ide.inspections.PhantomTypeParameterInspection"/>
        <localInspection language="Move" groupName="Move"
                         displayName="Unused import"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="org.move.ide.inspections.MvUnusedImportInspection"/>
        <localInspection language="Move" groupName="Move"
                         displayName="Unused declaration"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="org.move.ide.inspections.MvUnusedVariableInspection"/>

        <!-- Color Settings -->
        <colorSettingsPage implementation="org.move.ide.colors.MvColorSettingsPage"/>

        <additionalTextAttributes scheme="Default" file="colors/MoveDefault.xml"/>
        <additionalTextAttributes scheme="Darcula" file="colors/MoveDarcula.xml"/>

        <moduleType id="MOVE_MODULE"
                    implementationClass="org.move.cli.module.MvModuleType"/>
        <moduleBuilder builderClass="org.move.cli.module.MvModuleBuilder"/>
        <projectTaskRunner implementation="org.move.cli.runconfig.buildtool.AptosBuildTaskRunner" />

        <projectOpenProcessor id="Move" implementation="org.move.cli.MoveProjectOpenProcessor"/>
        <directoryProjectGenerator implementation="org.move.ide.newProject.MvDirectoryProjectGenerator" />

        <projectConfigurable instance="org.move.cli.settings.PerProjectMoveConfigurable"
                             displayName="Move Language"
                             groupId="language"
                             id="language.move"/>
        <projectService serviceInterface="org.move.utils.ProjectRootService"
                        serviceImplementation="org.move.utils.ProjectRootServiceImpl"
                        testServiceImplementation="org.move.utils.TestProjectRootServiceImpl"/>

        <projectService serviceImplementation="org.move.cli.MoveProjectsService"/>
<!--        <projectService serviceImplementation="org.move.cli.packages.MovePackageService"/>-->

<!--        <projectService serviceInterface="com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectTracker"-->
<!--                        serviceImplementation="org.move.cli.projectAware.MoveExternalSystemProjectAware"-->
<!--                        overrides="true" />-->

        <additionalLibraryRootsProvider
                implementation="org.move.cli.module.BuildLibraryRootsProvider"/>

        <!-- Notifications -->
        <notificationGroup id="Move Plugin" displayType="BALLOON"/>
        <editorNotificationProvider
                implementation="org.move.ide.notifications.InvalidAptosBinaryNotification"/>

        <intentionAction>
            <className>org.move.ide.intentions.RemoveCurlyBracesIntention</className>
            <category>Move</category>
        </intentionAction>
        <intentionAction>
            <className>org.move.ide.intentions.InlineAddressBlockIntention</className>
            <category>Move</category>
        </intentionAction>
        <intentionAction>
            <className>org.move.ide.intentions.ChopParameterListIntention</className>
            <category>Move</category>
        </intentionAction>
        <intentionAction>
            <className>org.move.ide.intentions.ChopArgumentListIntention</className>
            <category>Move</category>
        </intentionAction>

    </extensions>

    <projectListeners>
        <listener class="org.move.ide.notifications.UpdateNotificationsOnSettingsChangeListener"
                  topic="org.move.cli.settings.MoveSettingsListener"
                  activeInTestMode="false"/>
    </projectListeners>

    <actions>
        <action id="Move.NewMoveFile"
                class="org.move.ide.actions.CreateMoveFileAction"
                text="Move File"
                description="Create new Move file">
            <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFile"/>
        </action>
        <action id="Move.RefreshAllProjects"
                class="org.move.ide.actions.RefreshMvProjectsAction"
                icon="AllIcons.Actions.Refresh"/>
        <action id="SavePsi" class="org.move.psi.SavePsiFile" text="Save Current file" description="Save">
            <add-to-group group-id="ToolsMenu" anchor="first"/>
        </action>
        <action id="ResourceTest" class="org.move.psi.ResouceTest" text="Test for Resource"
                description="Resouce Debug ">
            <add-to-group group-id="ToolsMenu" anchor="first"/>
        </action>
        <action id="HandleDepend" class="org.move.psi.HandleDepend" text="HandleDepend"
                description="before handle current project ,we should handle dependencies">
            <add-to-group group-id="ToolsMenu" anchor="first"/>
        </action>
    </actions>
</idea-plugin>
